{"version":3,"sources":["common/SvgIcon/index.js","common/ScrollToTop/styles.js","common/ScrollToTop/index.js"],"names":["StyledIcon","styled","img","size","StyledSvg","div","theme","color","get","stroke","hoverColor","ProjectIcon","src","alt","SvgIcon","isSvg","includes","svgName","split","iconSet","icon","Up","accent","secondary","background","main","text","Input","onClick","document","getElementById","scrollIntoView","behavior","block","inline"],"mappings":"sOAKMA,EAAaC,IAAOC,IAAV,+DACL,qBAAGC,QACF,qBAAGA,QAETC,EAAYH,IAAOI,IAAV,kOAEF,qBAAGF,MAAmB,MACrB,qBAAGA,MAAmB,MAEtB,gBAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAAuBA,EAAK,UAAMC,IAAIF,EAAOC,IAAW,MACtD,gBAAGD,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOE,EAAjB,EAAiBA,OAAjB,OACRF,GAASE,EAAT,UAAqBD,IAAIF,EAAOC,IAAW,MAIlC,gBAAGD,EAAH,EAAGA,MAAOI,EAAV,EAAUA,WAAV,OAA4BA,EAAaF,IAAIF,EAAOI,GAAc,MACjE,gBAAGJ,EAAH,EAAGA,MAAOI,EAAV,EAAUA,WAAYD,EAAtB,EAAsBA,OAAtB,OACRC,GAAcD,EAASD,IAAIF,EAAOI,GAAc,MAsBpDC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKT,EAAR,EAAQA,KAAR,OAClB,cAACH,EAAD,CAAYY,IAAG,wBAAmBA,GAAOC,IAAKD,EAAKT,KAAMA,KAI5CW,UAtBC,SAAC,GAA8C,IAAD,EAA3CF,EAA2C,EAA3CA,IAAKT,EAAsC,EAAtCA,KAAMI,EAAgC,EAAhCA,MAAOE,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACrCK,EAAQH,GAAOA,EAAII,SAAS,QAC5BC,EAAUL,IAAG,UAAIA,EAAIM,MAAM,eAAd,aAAI,EAAoB,IAC3C,OAAOH,GAASE,EACd,cAACb,EAAD,CACEG,MAAOA,EACPM,IAAKD,EACLH,OAAQA,EACRN,KAAMA,EACNO,WAAYA,EALd,SAOE,cAAC,IAAD,CAAcS,QAASA,EAASC,KAAMH,MAGxC,cAACjB,EAAD,CAAYY,IAAG,eAAUA,GAAOC,IAAKD,EAAKT,KAAMA,M,8jVCvCvCkB,E,KAAKpB,EAAOI,IAAV,qlBAeO,qBAAGC,MAAkBgB,OAAOC,aAE5B,qBAAGjB,MAAkBgB,OAAOE,cAI1B,qBAAGlB,MAAkBgB,OAAOG,QACvC,qBAAGnB,MAAkBgB,OAAOI,Q,OCH1BC,UAjBD,WAUZ,OACE,cAAC,EAAD,CAAMC,QAVS,WACCC,SAASC,eAAe,UAChCC,eAAe,CACrBC,SAAU,SACVC,MAAO,MACPC,OAAQ,aAKV,SACE,cAACpB,EAAA,QAAD,CAASF,IAAI,iBAAiBT,KAAM","file":"static/js/12.cbee0e6f.chunk.js","sourcesContent":["import IcomoonReact from \"icomoon-react\";\r\nimport get from 'lodash.get';\r\nimport iconSet from \"./selection.json\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledIcon = styled.img`\r\n  width: ${({ size }) => size}px;\r\n  height: ${({ size }) => size}px;\r\n`;\r\nconst StyledSvg = styled.div`\r\n  svg {\r\n    width: ${({ size }) => size || 32}px;\r\n    height: ${({ size }) => size || 32}px;\r\n    path {\r\n      fill: ${({ theme, color }) => (color ? `${get(theme, color)}` : \"\")};\r\n      stroke: ${({ theme, color, stroke }) =>\r\n        color && stroke ? `${get(theme, color)}` : \"\"};\r\n    }\r\n    &:hover {\r\n      path {\r\n        fill:  ${({ theme, hoverColor }) => (hoverColor ? get(theme, hoverColor) : \"\")};\r\n        stroke: ${({ theme, hoverColor, stroke }) =>\r\n          hoverColor && stroke ? get(theme, hoverColor) : \"\"};\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SvgIcon = ({ src, size, color, stroke, hoverColor }) => {\r\n  const isSvg = src && src.includes(\".svg\");\r\n  const svgName = src && src.split(\".svg\")?.[0];\r\n  return isSvg && svgName ? (\r\n    <StyledSvg\r\n      color={color}\r\n      alt={src}\r\n      stroke={stroke}\r\n      size={size}\r\n      hoverColor={hoverColor}\r\n    >\r\n      <IcomoonReact iconSet={iconSet} icon={svgName} />\r\n    </StyledSvg>\r\n  ) : (\r\n    <StyledIcon src={`/img/${src}`} alt={src} size={size} />\r\n  );\r\n};\r\nconst ProjectIcon = ({ src, size }) => (\r\n  <StyledIcon src={`/img/projects/${src}`} alt={src} size={size} />\r\n);\r\n\r\nexport { ProjectIcon };\r\nexport default SvgIcon;\r\n","import styled from 'styled-components';\r\n\r\nexport const Up = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0 !important;\r\n  color: rgba(0, 0, 0, 0.65);\r\n  font-size: 14px;\r\n  line-height: 1.5715;\r\n  list-style: none;\r\n  position: fixed;\r\n  right: 100px;\r\n  bottom: 50px;\r\n  z-index: 10;\r\n  width: 40px;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.accent.secondary};\r\n  border-radius: 50%;\r\n  border: 2px solid ${({ theme }) => theme.accent.background};\r\n  display: flex;\r\n  align-items: center;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.accent.main};\r\n    color: ${({ theme }) => theme.accent.text};\r\n  }\r\n  div {\r\n    margin: 0 auto;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import SvgIcon from \"../../common/SvgIcon\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Input = () => {\r\n  const scrollUp = () => {\r\n    const element = document.getElementById(\"header\");\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <S.Up onClick={scrollUp}>\r\n      <SvgIcon src=\"scroll-top.svg\" size={26} />\r\n    </S.Up>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"sourceRoot":""}